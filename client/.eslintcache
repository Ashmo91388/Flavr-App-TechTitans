[{"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\index.js":"1","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\App.js":"3","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\pages\\Signup.js":"4","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\pages\\SingleThought.js":"5","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\pages\\Login.js":"6","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\pages\\Home.js":"7","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\Header\\index.js":"8","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\Footer\\index.js":"9","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\utils\\mutations.js":"10","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\utils\\queries.js":"11","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\utils\\auth.js":"12","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\CommentList\\index.js":"13","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\ThoughtForm\\index.js":"14","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\CommentForm\\index.js":"15","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\Feature\\index.js":"16","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\ThoughtList\\index.js":"17","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\Intro\\index.js":"18"},{"size":500,"mtime":1684811328034,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1684811328037,"results":"21","hashOfConfig":"20"},{"size":2116,"mtime":1685123454918,"results":"22","hashOfConfig":"20"},{"size":2699,"mtime":1685124391197,"results":"23","hashOfConfig":"20"},{"size":1562,"mtime":1684811328037,"results":"24","hashOfConfig":"20"},{"size":2542,"mtime":1685125596265,"results":"25","hashOfConfig":"20"},{"size":1042,"mtime":1685122473095,"results":"26","hashOfConfig":"20"},{"size":1328,"mtime":1685123165701,"results":"27","hashOfConfig":"20"},{"size":868,"mtime":1685062616446,"results":"28","hashOfConfig":"20"},{"size":1226,"mtime":1685124111344,"results":"29","hashOfConfig":"20"},{"size":908,"mtime":1685122437342,"results":"30","hashOfConfig":"20"},{"size":1043,"mtime":1685124572721,"results":"31","hashOfConfig":"20"},{"size":953,"mtime":1684811328022,"results":"32","hashOfConfig":"20"},{"size":2865,"mtime":1685062616448,"results":"33","hashOfConfig":"20"},{"size":2410,"mtime":1684811328021,"results":"34","hashOfConfig":"20"},{"size":876,"mtime":1685062616446,"results":"35","hashOfConfig":"20"},{"size":1006,"mtime":1684811328032,"results":"36","hashOfConfig":"20"},{"size":1212,"mtime":1685062616447,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"vn1nip",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\index.js",[],["82","83"],"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\App.js",["84"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleThought from './pages/SingleThought';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3001/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              {/* <Route \n                path=\"/thoughts/:thoughtId\" \n                element={<SingleThought />} \n              /> */}\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n     </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\pages\\Signup.js",[],"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\pages\\SingleThought.js",[],"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\pages\\Login.js",[],"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\pages\\Home.js",["85","86","87","88","89","90","91"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ThoughtList from '../components/ThoughtList';\nimport ThoughtForm from '../components/ThoughtForm';\nimport Intro from '../components/Intro';\nimport Feature from '../components/Feature';\n\n\nimport { QUERY_THOUGHTS, QUERY_RESTAURANTS } from '../utils/queries';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_RESTAURANTS);\n  // const thoughts = data?.thoughts || [];\n\n  return (\n    <main> testing\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n        >\n          {/* <ThoughtForm /> */}\n        </div>\n        <div className=\"col-12 col-md-8 mb-3\">\n          {/* {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ThoughtList\n              thoughts={thoughts}\n              title=\"Some Feed for Thought(s)...\"\n            />\n          )} */}\n          {/* <Intro />\n          <Feature /> */}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\utils\\queries.js",[],"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\utils\\auth.js",["92"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\ThoughtForm\\index.js",["93","94"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_THOUGHT } from '../../utils/mutations';\nimport { QUERY_THOUGHTS } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\nconst ThoughtForm = () => {\n  const [thoughtText, setThoughtText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addThought, { error }] = useMutation(ADD_THOUGHT, {\n    update(cache, { data: { addThought } }) {\n      try {\n        const { thoughts } = cache.readQuery({ query: QUERY_THOUGHTS });\n\n        cache.writeQuery({\n          query: QUERY_THOUGHTS,\n          data: { thoughts: [addThought, ...thoughts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addThought({\n        variables: {\n          thoughtText,\n          thoughtAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setThoughtText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'thoughtText' && value.length <= 280) {\n      setThoughtText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      {/* <h3>Welcome To Flavr!</h3> */}\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"thoughtText\"\n                placeholder=\"Here's a new thought...\"\n                value={thoughtText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Thought\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          {/* You'll need to be logged in to create and view reviews. Please{' '} */}\n          {/* <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link> */}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\CommentForm\\index.js",["95"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thoughtId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          thoughtId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>What are your thoughts on this thought?</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\Feature\\index.js",["96","97"],"import React from 'react';\n\nconst Feature = () => {\n\n    return (\n        <div className=\"FeatureBox\" style={{ border: '1px dotted #1a1a1a' }}>\n            <div className=\"card\" style={{ width: '18rem' }}>\n                <img src=\"...\" class=\"card-img-top\" alt=\"...\" />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title\">Boston Market</h5>\n                    <p className=\"card-text\">cuisine: American</p>\n                    <p className=\"card-text\">Rating: 7/10</p>\n                    <a href=\"#\" className=\"btn btn-primary\">See Reviews</a>\n                </div>\n            </div>\n        \n            {/* <p>name: String!\n                cuisine: String\n                image: String\n               \n                totalRating: Int\n            </p> */}\n        </div>\n    )\n};\nexport default Feature;\n {/* reviews: [Review] */}","C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\ThoughtList\\index.js",[],"C:\\Users\\Michell\\Documents\\TheFlavrProject\\Flavr-App-TechTitans\\client\\src\\components\\Intro\\index.js",["98"],"    import React from 'react';\n\nconst Intro = () => {\n    const introStyles = {\n        backgroundImage: 'url(\"/flavr-backgrnd.jpg\")',\n        backgroundSize: '100%',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'left',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        color: 'white',\n        padding: '1rem',\n        display: 'flex',\n        opacity: 0.8,\n\n      };\n      \n      const contentStyles = {\n        flex: '1',\n      };\n    \n      const headingStyles = {\n        color: 'white',\n      };\n\n  const linkStyles = {\n    color: '#FF8C42',\n    textDecoration: 'underline',\n  };\n\n  return (\n    <div className=\"col-12 col-md-10 mb-3 p-3\" style={introStyles}>\n      <div>\n        <h3 style={headingStyles}>Welcome to Flavr!</h3>\n        <p>\n          Unleash Your Taste Adventure! Discover explosive flavors and reliable taste ratings for every eatery near you using our unique flavor rating system. Join the vibrant community of food connoisseurs today! You need to be logged in to see and create reviews. Please <a href=\"/login\" style={linkStyles}>login</a> or <a href=\"/signup\" style={linkStyles}>signup.</a>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Intro;\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":14,"column":8,"nodeType":"105","messageId":"106","endLine":14,"endColumn":21},{"ruleId":"103","severity":1,"message":"107","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":19},{"ruleId":"103","severity":1,"message":"108","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":19},{"ruleId":"103","severity":1,"message":"109","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":13},{"ruleId":"103","severity":1,"message":"110","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":15},{"ruleId":"103","severity":1,"message":"111","line":10,"column":10,"nodeType":"105","messageId":"106","endLine":10,"endColumn":24},{"ruleId":"103","severity":1,"message":"112","line":13,"column":11,"nodeType":"105","messageId":"106","endLine":13,"endColumn":18},{"ruleId":"103","severity":1,"message":"113","line":13,"column":20,"nodeType":"105","messageId":"106","endLine":13,"endColumn":24},{"ruleId":"114","severity":1,"message":"115","line":41,"column":1,"nodeType":"116","endLine":41,"endColumn":34},{"ruleId":"103","severity":1,"message":"117","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},{"ruleId":"103","severity":1,"message":"113","line":34,"column":15,"nodeType":"105","messageId":"106","endLine":34,"endColumn":19},{"ruleId":"103","severity":1,"message":"113","line":19,"column":15,"nodeType":"105","messageId":"106","endLine":19,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":13,"column":21,"nodeType":"120","endLine":13,"endColumn":61},{"ruleId":"121","severity":1,"message":"122","line":27,"column":2,"nodeType":"123","messageId":"124","endLine":27,"endColumn":27},{"ruleId":"103","severity":1,"message":"125","line":17,"column":13,"nodeType":"105","messageId":"106","endLine":17,"endColumn":26},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'SingleThought' is defined but never used.","Identifier","unusedVar","'ThoughtList' is defined but never used.","'ThoughtForm' is defined but never used.","'Intro' is defined but never used.","'Feature' is defined but never used.","'QUERY_THOUGHTS' is defined but never used.","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'contentStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]